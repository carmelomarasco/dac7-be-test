package ec.dgtaxud.dac.val

import eu.europa.ec.taxud.validation.ValidationContext;
import org.w3c.dom.Element;
import javax.xml.xpath.XPath;
import javax.xml.xpath.XPathConstants
import eu.europa.ec.taxud.dac7.validation.Constants
import java.util.List
import eu.europa.ec.taxud.dac7.utils.XmlUtils
import eu.europa.ec.taxud.dac7.validation.ErrorCode
import java.util.stream.Collectors
import oecd.ties.isodpitypes.v1.MSCountryCodeType
import oecd.ties.dpi.v1.INTypeEnumType;

dialect "java"

rule "TR-40020"
extends "DAC7-DPI-BODY"
agenda-group "DAC7-DPI-BODY"
auto-focus true

	when

    then

        if($context.getProperty(Constants.EU_SPECIFIC_RULES) != null && !(Boolean)$context.getProperty(Constants.EU_SPECIFIC_RULES)){
            return;
        }

        boolean foreignPO = false;
        boolean containsIIN = false;
        List<Element> countryCodeList = XmlUtils.findElements($context, $element, "//dpi:PlatformOperator/dpi:Address/dpi:CountryCode");
        for (final Element countryCode : countryCodeList) {
            try {
                // Is a Member State ?
                MSCountryCodeType.valueOf(countryCode.getTextContent());
            } catch (Exception e){
                // Not a Member State
                foreignPO = true;
                break;
            }
        }

        List<Element> ins = XmlUtils.findElements($context, $element, "//dpi:PlatformOperator/dpi:IN");
        for (final Element elem : ins){
            String inType = (String) XmlUtils.getChildObjectValue($context, elem, "./@INType", XPathConstants.STRING);
            if (INTypeEnumType.IIN.value().equals(inType)){
                containsIIN = true;
                break;
            }
        }

        if (foreignPO && !containsIIN) {
            String docTypeIndic = (String) XmlUtils.getChildObjectValue($context, $element, "dpi:PlatformOperator/dpi:DocSpec/stf:DocRefId", XPathConstants.STRING);
            addError($context, ErrorCode.BR_PAR_002, docTypeIndic, $element);
        }
end
